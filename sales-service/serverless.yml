
service: sales-service
app: thesis-server
org: thomas-cristofaro

frameworkVersion: '3'

provider:
  name: aws
  runtime: go1.x
  stage: dev
  region: us-east-1

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "sns:Publish"
          Resource:
            - arn:aws:sns:*:*:*
        - Effect: "Allow"
          Action:
            - "sqs:sendmessage"
          Resource:
            - arn:aws:sqs:*:*:*
  
  httpApi:
    cors: true
    authorizers:
      cognitoAuth:
        type: "jwt"
        identitySource: $request.header.Authorization
        issuerUrl: ${file(../config.json):cognito_issuer_url}
        audience:
          - ${file(../config.json):cognito_id_client}

  environment:
    OnAfterPostingOrderTopicArn: !GetAtt OnAfterPostingOrderTopic.TopicArn

package:
  patterns:
    - '!./**'
    - ./bin/**

functions:
  Start:
    handler: bin/start
    events:
      - httpApi:
          path: /start
          method: GET
  ChangeOrderStatus:
    handler: bin/change-order-status
    events:
      - sqs:
          arn: !GetAtt ChangeOrderStatusQueue.Arn

resources:
  Resources:
    OnAfterPostingOrderTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: OnAfterPostingOrder
    ChangeOrderStatusQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ChangeOrderStatus

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
