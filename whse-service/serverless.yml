
service: whse-service
app: thesis-server

frameworkVersion: '3'

provider:
  name: aws
  runtime: go1.x
  stage: dev
  region: us-east-1

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "sns:Publish"
          Resource:
            - arn:aws:sns:*:*:*
        - Effect: "Allow"
          Action:
            - "sqs:sendmessage"
          Resource:
            - arn:aws:sqs:*:*:*
  
  httpApi:
    cors: true
    authorizers:
      cognitoAuth:
        type: "jwt"
        identitySource: $request.header.Authorization
        issuerUrl: ${file(../config.json):CognitoIssuerUrl}
        audience:
          - ${file(../config.json):CognitoIdClient}

  environment:
    DBHost: ${file(../config.json):DBHost}
    DBPort: ${file(../config.json):DBPort}
    DBUser: ${file(../config.json):DBUser}
    DBPass: ${file(../config.json):DBPass}
    DBName: ${file(./config.json):DBName}
    LogMessageQueueUrl: ${file(../config.json):LogMessageQueueUrl}
    OnAfterPostingShptTopicArn: !GetAtt OnAfterPostingShptTopic.TopicArn
    ChangeOrderStatusQueueUrl: ${file(../config.json):ChangeOrderStatusQueueUrl}

package:
  patterns:
    - '!./**'
    - ./bin/**

functions:
  ShipmentList:
    handler: bin/shipment-list
    events:
    - httpApi:
        path: /shipmentlist/{param}
        method: GET
        authorizer:
          name: cognitoAuth
  ShipmentCard:
    handler: bin/shipment-card
    events:
    - httpApi:
        path: /shipmentcard/{param}
        method: GET
        authorizer:
          name: cognitoAuth
    - httpApi:
        path: /shipmentcard
        method: POST
        authorizer:
          name: cognitoAuth
    - httpApi:
        path: /shipmentcard
        method: PATCH
        authorizer:
          name: cognitoAuth
    - httpApi:
        path: /shipmentcard
        method: DELETE
        authorizer:
          name: cognitoAuth
  ShipmentLineList:
    handler: bin/shipment-line-list
    events:
    - httpApi:
        path: /shipmentlinelist/{param}
        method: GET
        authorizer:
          name: cognitoAuth
  ShipmentLineCard:
    handler: bin/shipment-line-card
    events:
    - httpApi:
        path: /shipmentlinecard/{param}
        method: GET
        authorizer:
          name: cognitoAuth
    - httpApi:
        path: /shipmentlinecard
        method: POST
        authorizer:
          name: cognitoAuth
    - httpApi:
        path: /shipmentlinecard
        method: PATCH
        authorizer:
          name: cognitoAuth
    - httpApi:
        path: /shipmentlinecard
        method: DELETE
        authorizer:
          name: cognitoAuth
  PostShipment:
    handler: bin/post-shipment
    events:
      - sns:
          arn: ${file(../config.json):OnAfterPostingOrderTopicArn}

resources:
  Resources:
    OnAfterPostingShptTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: OnAfterPostingShpt
  Outputs:
    OnAfterPostingShptTopicOutput:
      Value: !GetAtt OnAfterPostingShptTopic.TopicArn
